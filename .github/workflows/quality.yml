# Licensed under the Apache License: http://www.apache.org/licenses/LICENSE-2.0
# For details: https://github.com/nedbat/coveragepy/blob/master/NOTICE.txt
# https://github.com/pyscaffold/pyscaffold/blob/master/src/pyscaffold/templates/github_ci_workflow.template

name: "Quality"

on:
  push:
    branches:
      - master
      - msftcangoblowm/*
  pull_request:
  workflow_dispatch:

defaults:
  run:
    shell: bash

env:
  PIP_DISABLE_PIP_VERSION_CHECK: 1

permissions:
  contents: read

concurrency:
  group: >-
    ${{ github.workflow }}-${{ github.ref_type }}-
    ${{ github.event.pull_request.number || github.sha }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      wheel-distribution: ${{ steps.wheel-distribution.outputs.path }}
    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"
      - name: "Install Python"
        uses: "actions/setup-python@v5"
        id: setup-python
        with:
          python-version: "3.9" # Minimum of PYVERSIONS
          cache: pip
          cache-dependency-path: 'requirements/*.pip'

      - name: "Build package distribution files"
        run: |
          python igor.py quietly "python igor.py build_next tag"

      - name: Record the path of wheel distribution
        id: wheel-distribution
        run: echo "path=$(ls dist/*.whl)" >> $GITHUB_OUTPUT

      - name: Store the distribution files for use in other stages
        # `tests` and `publish` will use the same pre-built distributions,
        # so we make sure to release the exact same package that was tested
        uses: actions/upload-artifact@v3
        with:
          name: python-distribution-files
          path: dist/
          retention-days: 1

  lint:
    name: "isort black flake8 etc"
    needs: prepare  # provide dist/* folder
    runs-on: ubuntu-latest

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"

      - name: "Install Python"
        uses: "actions/setup-python@v5"
        with:
          python-version: "3.9" # Minimum of PYVERSIONS
          cache: pip
          cache-dependency-path: 'requirements/*.pip'

      - name: Retrieve pre-built distribution files
        uses: actions/download-artifact@v3
        with: {name: python-distribution-files, path: dist/}

      - name: "Install dependencies"
        run: |
          python -m pip install -r requirements/tox.pip

      - name: "Tox lint"
        run: |
          python -m tox -e lint

  mypy:
    name: "Check types"
    runs-on: ubuntu-latest

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"

      - name: "Install Python"
        uses: "actions/setup-python@v5"
        with:
          python-version: "3.9" # Minimum of PYVERSIONS, but at least 3.9
          cache: pip
          cache-dependency-path: 'requirements/*.pip'

      - name: "Install dependencies"
        run: |
          # Runs on 3.9, but hashes supported by pip-tools is
          # not supported by setuptools. So don't expect hashes
          python -m pip install -r requirements/tox.pip

      - name: "Tox mypy"
        run: |
          python -m tox -e mypy

  docs:
    name: "Build docs"
    runs-on: ubuntu-latest

    steps:
      - name: "Check out the repo"
        uses: "actions/checkout@v4"

      - name: "Install Python"
        uses: "actions/setup-python@v5"
        with:
          python-version: "3.9" # Doc version from PYVERSIONS
          cache: pip
          cache-dependency-path: 'requirements/*.pip'

      - name: "Show environment"
        run: |
          set -xe
          python -VV
          python -m site
          env

      - name: "Install dependencies"
        run: |
          set -xe
          python -m pip install -r requirements/tox.pip

      - name: "Tox docs"
        run: |
          python -m tox -e docs
